name: Build Container Image

on:
  push:
    branches:
      - '*'
    tags:
      - v*
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-image.yml'

jobs:
  rust_version:
    runs-on: ubuntu-latest

    outputs:
      rust_version: ${{ steps.rust_ver.outputs.rust_version }}

    steps:
    - uses: actions/checkout@v2
    - name: Get Rust version
      id: rust_ver
      run: echo ::set-output name=rust_version::$(cat rust-toolchain)

  build_and_push:
    name: Build and Push
    needs: rust_version
    strategy:
      matrix:
        base_img: [buster, slim-buster, slim, bullseye, slim-bullseye, alpine]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/${{ github.repository }},sksat/${{ github.event.repository.name }}
        flavor: |
          latest=auto
          suffix=-${{ needs.rust_version.outputs.rust_version }}-${{ matrix.base_img }}

    - name: Set up Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to ghcr.io
      uses: docker/login-action@v1
      if: ${{ github.ref == join('refs/heads/', github.event.repository.default_branch) }}
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@v1
      if: ${{ github.ref == join('refs/heads/', github.event.repository.default_branch) }}
      with:
        username: sksat
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set Tag
      id: tag
      run: |
        TAGS=$(cat <<EOF
        ${{ steps.meta.outputs.tags }}
        EOF
        )
        echo ${TAGS}
        if ${{ github.ref == 'refs/heads/docker'}}; then
          echo "default branch"
        else
          echo "not default branch"
        fi

    - name: Build and Push
      uses: docker/build-push-action@v2.7.0
      with:
        context: .
        load: true
        push: ${{ github.ref == join('refs/heads/', github.event.repository.default_branch) }}
        build-args: BASE_IMG=rust:${{ matrix.base_img }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
